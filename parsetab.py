
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'CHARACTER EQUALS NUMBER PLUS TIMES TOKEN\n    statement : operacion empty\n        | operacion statement\n    \n    operacion : suma \n        | multiplicacion\n    \n    suma : TOKEN EQUALS NUMBER PLUS NUMBER\n        | TOKEN EQUALS CHARACTER PLUS NUMBER\n        | TOKEN EQUALS NUMBER PLUS CHARACTER\n        | TOKEN EQUALS CHARACTER PLUS CHARACTER\n    \n    multiplicacion : TOKEN EQUALS NUMBER TIMES NUMBER\n        | TOKEN EQUALS CHARACTER TIMES NUMBER\n        | TOKEN EQUALS NUMBER TIMES CHARACTER\n        | TOKEN EQUALS CHARACTER TIMES CHARACTER\n    empty : '
    
_lr_action_items = {'TOKEN':([0,2,3,4,15,16,17,18,19,20,21,22,],[5,5,-3,-4,-5,-7,-9,-11,-8,-6,-12,-10,]),'$end':([1,2,3,4,6,7,15,16,17,18,19,20,21,22,],[0,-13,-3,-4,-1,-2,-5,-7,-9,-11,-8,-6,-12,-10,]),'EQUALS':([5,],[8,]),'NUMBER':([8,11,12,13,14,],[9,15,17,20,22,]),'CHARACTER':([8,11,12,13,14,],[10,16,18,19,21,]),'PLUS':([9,10,],[11,13,]),'TIMES':([9,10,],[12,14,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,2,],[1,7,]),'operacion':([0,2,],[2,2,]),'suma':([0,2,],[3,3,]),'multiplicacion':([0,2,],[4,4,]),'empty':([2,],[6,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> operacion empty','statement',2,'p_statement','Examen.py',61),
  ('statement -> operacion statement','statement',2,'p_statement','Examen.py',62),
  ('operacion -> suma','operacion',1,'p_operacion','Examen.py',68),
  ('operacion -> multiplicacion','operacion',1,'p_operacion','Examen.py',69),
  ('suma -> TOKEN EQUALS NUMBER PLUS NUMBER','suma',5,'p_suma','Examen.py',74),
  ('suma -> TOKEN EQUALS CHARACTER PLUS NUMBER','suma',5,'p_suma','Examen.py',75),
  ('suma -> TOKEN EQUALS NUMBER PLUS CHARACTER','suma',5,'p_suma','Examen.py',76),
  ('suma -> TOKEN EQUALS CHARACTER PLUS CHARACTER','suma',5,'p_suma','Examen.py',77),
  ('multiplicacion -> TOKEN EQUALS NUMBER TIMES NUMBER','multiplicacion',5,'p_multiplicacion','Examen.py',82),
  ('multiplicacion -> TOKEN EQUALS CHARACTER TIMES NUMBER','multiplicacion',5,'p_multiplicacion','Examen.py',83),
  ('multiplicacion -> TOKEN EQUALS NUMBER TIMES CHARACTER','multiplicacion',5,'p_multiplicacion','Examen.py',84),
  ('multiplicacion -> TOKEN EQUALS CHARACTER TIMES CHARACTER','multiplicacion',5,'p_multiplicacion','Examen.py',85),
  ('empty -> <empty>','empty',0,'p_empty','Examen.py',89),
]
